@model DocSpot.ViewModels.AppointmentVM

@{
    if (Model.Id == 0)
    {
        ViewData["Title"] = "Add Appintment";
    }
    else
    {
        ViewData["Title"] = "Edit Appintment";
    }
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddEditAppointment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(x => x.Id)
            <div class="form-group">
                <label asp-for="HospitalId" class="control-label"></label>
                <select asp-for="HospitalId" class="form-control" id="hospitalDropdown">
                    <option value="">Select Hospital</option>
                    @foreach (var hospital in ViewBag.HospitalList)
                    {
                        <option value="@hospital.Id">@hospital.Name</option>
                    }
                </select>
                <span asp-validation-for="HospitalId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentId" class="control-label"></label>
                <select asp-for="DepartmentId" class="form-control" id="departmentDropdown">
                    <option value="">Select Department</option>
                    @foreach (var item in ViewBag.DepartmentList)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                <span asp-validation-for="HospitalId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DoctorId" class="control-label"></label>
                <select asp-for="DoctorId" class="form-control" id="doctorDropdown">
                    <option value="">Select Doctor</option>
                    
                </select>
                <span asp-validation-for="DoctorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AppointmentDate" class="control-label">Date of Appointment</label>
                <input asp-for="AppointmentDate" type="text" id="AppointmentDate" class="form-control" />
                <span asp-validation-for="AppointmentDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AppointmentTime" class="control-label"></label>
                <select asp-for="AppointmentTime" class="form-control">
                    <option value="">Select Appointment Time</option>
                    @foreach (var item in ViewBag.AppointmentTimeList)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
                <span asp-validation-for="AppointmentTime" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script>
        $(document).ready(function () {
            $('#AppointmentDate').datepicker({
                format: 'yyyy-mm-dd', // Date format
                autoclose: true, // Close the datepicker when a date is selected
            });
           
            // Function to populate doctor dropdown
            // Function to populate doctor dropdown
            function populateDoctorDropdown(hospitalId, departmentId, selectedDoctorId) {
                $.ajax({
                    url: '/Doctor/GetDoctorList',
                    type: 'GET',
                    data: { hospitalId: hospitalId, departmentId: departmentId },
                    success: function (data) {
                        // Clear existing options
                        $('#doctorDropdown').empty();
                        if (data.length > 0) {
                            // Add new options if doctors are available
                            $('#doctorDropdown').append($('<option>', {
                                value: "",
                                text: "Select Doctor"
                            }));
                            $.each(data, function (key, value) {
                                var option = $('<option>', {
                                    value: value.id,
                                    text: value.firstName + " " + value.lastName + " - " + value.fees
                                });
                                // Set selected attribute for the selected doctor
                                if (value.id == selectedDoctorId) { // Use == instead of === to compare values
                                    option.prop('selected', true);
                                }
                                $('#doctorDropdown').append(option);
                            });
                        } else {
                            // Show "No Doctors available" if no doctors are returned
                            $('#doctorDropdown').append($('<option>', {
                                value: "",
                                text: "No Doctors available"
                            }));
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            }

            debugger;
            // Populate doctor dropdown on page load if hospital and department are selected
            var hospitalId = $('#hospitalDropdown').val();
            var departmentId = $('#departmentDropdown').val();
            var selectedDoctorId = '@Model.DoctorId'; // Get the selected doctor ID from the model
            if (hospitalId && departmentId) {
                populateDoctorDropdown(hospitalId, departmentId, selectedDoctorId);
            }

            // Event listener for hospital and department dropdown change
            $('#hospitalDropdown, #departmentDropdown').change(function () {
                debugger
                var hospitalId = $('#hospitalDropdown').val();
                var departmentId = $('#departmentDropdown').val();

                // Make sure both hospital and department are selected
                if (hospitalId && departmentId) {
                    populateDoctorDropdown(hospitalId, departmentId, selectedDoctorId);
                }
            });
        });


    </script>

}
